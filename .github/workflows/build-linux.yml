name: build and run linux executable

on:
  push:
    branches: "main"
  # pull_request:
  #   branches: "main"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v2
      
    - name: Get current date and time
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H_%M_%S')"
    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: ${{ github.ref_name }}-${{ steps.date.outputs.date }} 
    #     files: ./*
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Replace '3.x' with your Python version
        
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: get dbc from latest release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: KSU-MS/ksu-ms-dbc
        
    - name: run pyinstaller
      run: |
        pyinstaller --onefile ./parser_exe.py
    - name: check what files we cooked up
      run: |
        ls -R
        cp -r ./test ./dist
        cp ./dataPlots.m ./dist



    - name: release-downloader
      uses: robinraju/release-downloader@v1.8
      with:
        repository:
          KSU-MS/ksu-ms-dbc
        latest: true
        fileName: "*.dbc"
        out-file-path: |
          ./dist/dbc-files
  
    - name: upload artifacts     
      uses: actions/upload-artifact@v2
      with:
        name: parser-exe-linux
        path: |
          ./build/*
          ./dist/*
    - name: release all files
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}-${{ steps.date.outputs.date }} 
        files: |
          ./*

  test-bin:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: parser-exe-linux
          path: parser-exe-download
      - name: run executable
        run: |
          cd parser-exe-download
          cd dist
          chmod u+x ./parser_exe
          ./parser_exe -h
          ./parser_exe --getdbc --test -v

  release-bin:
    needs: [build,test-bin]
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: parser-exe-linux
          path: parser-exe-download
      - name: compress artifact
        run: |
          tar -czvf parser-exe-linux.tar.gz ./parser-exe-download

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.ref_name }}_release_linux_${{ github.run_number }}
          draft: false
          prerelease: false
    
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./parser-exe-linux.tar.gz
          asset_name: parser_exe_linux.tar.gz
          asset_content_type: application/zip
        